class Solution {
    public List<String> fullJustify(String[] words, int maxWidth) {
        ArrayList<String> list = new ArrayList<>();
        int len=0;
        ArrayList<String> cur = new ArrayList<>();
        for(int i=0; i<words.length; i++){
            if(len + words[i].length() < maxWidth){
                cur.add(words[i]);
                len += (words[i].length()) + 1;
                if(i == words.length - 1){
                    String str = new String();
                    int last = maxWidth - len;
                    for(int j=0; j<cur.size(); j++){
                        str += (cur.get(j) + " ");
                    }
                    while(last!=0){
                        str += " ";
                        last--;
                    }
                    list.add(str);
                    break;
                }
            }else if(len + words[i].length() == maxWidth){
                cur.add(words[i]);
                String str = new String();
                for(int j=0; j<cur.size()-1; j++){
                    str += (cur.get(j) + " ");
                }
                str+=cur.get(cur.size() - 1);
                list.add(str);
                cur = new ArrayList<String>();
                len = 0;
            }else{
                i -= 1;
                String str = new String();
                if(cur.size() != 1){
                    len -= cur.size();
                    int extra = maxWidth - len;
                    int each = extra / (cur.size() - 1);
                    int last = extra % (cur.size() - 1);
                    for(int j=0; j<cur.size()-1; j++){
                        str += cur.get(j);
                        for(int k=0; k<each; k++){
                            str += " ";
                        }
                        if(last>0){
                            str += " ";
                            last -= 1;
                        }
                    }
                    str += cur.get(cur.size() - 1);
                }else{
                    int last = maxWidth - len + 1;
                    str+=cur.get(0);
                    while(last!=0){
                        str+=" ";
                        last--;
                    }
                }
                list.add(str);
                cur = new ArrayList<String>();
                len = 0;
            }
        }
        return list;
    }
}
